#/CMakeLists.txt
cmake_minimum_required (VERSION 2.8.4)
project (iceball)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")

add_subdirectory(vendor/sdl2)
add_subdirectory(vendor/lua51)
add_subdirectory(vendor/enet)
add_subdirectory(vendor/zlib)
add_subdirectory(vendor/sackit)

set_target_properties(lua luac PROPERTIES EXCLUDE_FROM_ALL 1 EXCLUDE_FROM_DEFAULT_BUILD 1)

include_directories(
    "${iceball_SOURCE_DIR}/vendor/gl"
    "${SDL2_SOURCE_DIR}/include"
    "${enet_SOURCE_DIR}/include"
    "${lua_SOURCE_DIR}/src"
    ${zlib_SOURCE_DIR}
    ${sackit_SOURCE_DIR}
)

#set(CMAKE_BINARY_DIR build)
set(CMAKE_SOURCE_DIR src)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fno-strict-aliasing -g3 -Wall -Wextra -Wno-unused-variable -Wno-unused-parameter")
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
IF(CMAKE_BUILD_TOOL MATCHES "(msdev|devenv|nmake)")
    add_definitions(/W4)                                        # warning level
    add_definitions(/TP)                                        # compile as c++
ELSEIF(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    add_definitions(-Wall -g)                                   # keep debugging symbols even in Release builds
ENDIF()

include_directories(include)
if (WIN32)
    if (MSVC)
        set_source_files_properties(filename.c PROPERTIES LANGUAGE CXX)
    endif (MSVC)

    include_directories("${CMAKE_CURRENT_SOURCE_DIR}/winlibs")
    include_directories("${CMAKE_CURRENT_SOURCE_DIR}/winlibs/glew")
    include_directories("${CMAKE_CURRENT_SOURCE_DIR}/winlibs/lua")
    include_directories("${CMAKE_CURRENT_SOURCE_DIR}/winlibs/SDL")
    include_directories("${CMAKE_CURRENT_SOURCE_DIR}/winlibs/zlib")

    link_directories("${CMAKE_CURRENT_SOURCE_DIR}/winlibs")

endif (WIN32)

# here be sackit
link_directories("${CMAKE_CURRENT_SOURCE_DIR}/xlibinc")
include_directories("${CMAKE_CURRENT_SOURCE_DIR}/xlibinc")

# find the hidden treasures
find_package(OpenGL REQUIRED)

add_subdirectory(src)
